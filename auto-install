#!/bin/sh
# Copyright (c) 2005-2007  WyldRyde IRC Network
# All rights reserved.
#
# $Id$
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.

for script in include/*
do
	. ${script}
done

conf_init

WORKDIR=`pwd`
COMMAND=`basename $0`

check_config() {
	if [ "${1}" = "" ] ; then
		# using conf/network.conf to write to
		CONFFILE="${WORKDIR}/conf/network.conf"
	else
		CONFFILE="${WORKDIR}/conf/${1}"
		if [ ! -e ${CONFFILE} ] ; then
			echo "ERROR: ${WORKDIR}/conf/${1} doesn't exist, aborting"
			exit
		fi
	fi
	echo ${CONFFILE}
}

add_server() {
	check_config $1
}

create_config() {
	if [ "${1}" = "" ] ; then
		if [ "${CONFFILE}" = "" ] ; then
			echo "ERROR: must specify a config file!"
			exit
		fi
	else
		CONFFILE="${WORKDIR}/conf/${1}"
		if [ -e ${CONFFILE} ] ; then
			echo "ERROR: config file already exists!"
			exit
		fi
	fi

	
}
ossh() {
	SERVER=`grep ^S ${STRIPCONF} | grep "${1}"`
	shift
	SSHIP=`echo "${SERVER}" | cut -d : -f 4`
	if [ "${SSHIP}" = "" ] ; then
		SSHIP=`echo "${SERVER}" | cut -d : -f 3 | sed s/-/\ /g | awk ' { print $1; }'`
	fi
	USERNAME=`echo "${SERVER}" | cut -d : -f 9`
	PORT=`echo "${SERVER}" | cut -d : -f 10	`
	if [ "${PORT}" = "" ] ; then
		PORT=22
	fi
	ssh -p ${PORT} ${USERNAME}@${SSHIP} sh -c \"$*\"
}
push_server() {
	if [ "${1}" = "" ] ; then
		for WORKINGSERVERS in `grep ^S ${STRIPCONF}`
		do
			SERVER=`echo ${WORKINGSERVERS} | cut -d : -f 2`
			cd /tmp/svn/ && tar -cpvf - wr-ircd | bzip2 | ossh ${SERVER} 'bunzip2 | tar -xpf - -C ./'
			ossh ${SERVER} 'cd wr-ircd \&\& ./configure --enable-inet6 --enable-hub --enable-ssl --enable-ziplinks --with-listen=5 --with-dpath=`pwd`  --with-spath=`pwd`/src/ircd --with-nick-history=2000 --with-sendq=3000000 --with-bufferpool=18 --with-hostname=127.0.0.1 --with-permissions=0600 --with-fd-setsize=1024 --enable-dynamic-linking'
			ossh ${SERVER} 'cd wr-ircd && cd . && make '
		done
	else
		WORKINGSERVERS=`grep ^S ${STRIPCONF} | grep ${1}`
		SERVER=`echo ${WORKINGSERVERS} | cut -d : -f 2`
		ossh ${SERVER} 'rm -rf wr-ircd'
		cd /tmp/svn/ && tar -cpvf - wr-ircd | bzip2 | ossh ${SERVER} 'bunzip2 | tar -xpf - -C ./'
		ossh ${SERVER} 'cd wr-ircd && ./configure --enable-inet6 --enable-hub --enable-ssl --enable-ziplinks --with-listen=5 --with-dpath=`pwd`  --with-spath=`pwd`/src/ircd --with-nick-history=2000 --with-sendq=3000000 --with-bufferpool=18 --with-hostname=127.0.0.1 --with-permissions=0600 --with-fd-setsize=1024 --enable-dynamic-linking'
		ossh ${SERVER} 'cd wr-ircd && cd . && make '
	fi
}

usage() {
	echo "usage:"
	echo -e "\t${COMMAND} push"
	echo -e "\t${COMMAND} create"
	echo -e "\t${COMMAND} add"
}

case "${1}" in
	[pP][uU][sS][hH]) 
		check_config
		push_server $2
	;;
	[aA][dD][dD])
		add_server $2
	;;
	[cC][rR][eE][aA][tT][eE])
		create_config $2
	;;
	*)
		usage
	;;
esac

